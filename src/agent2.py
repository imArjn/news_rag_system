# src/agent2.py

from src.embedding import get_embedding
from src.search import search
from src.summarization import generate_summary_local

def retrieve_and_summarize(query: str, data, index, top_k: int = 3) -> str:
    """
    Given a query, retrieve the most relevant news articles from the preprocessed data
    and generate a concatenated summary of their short descriptions.

    Parameters:
        query (str): The user query.
        data (pandas.DataFrame): The preprocessed news dataset.
        index (faiss.Index): The FAISS index built over article embeddings.
        top_k (int): Number of articles to retrieve.

    Returns:
        str: A combined summary string generated by summarizing the retrieved articles.
    """
    # Generate an embedding for the query.
    query_embedding = get_embedding(query)
    
    # Retrieve the top_k relevant articles based on their embeddings.
    indices, distances = search(index, query_embedding, top_k)
    
    # Debug: print out the retrieved indices
    print("DEBUG: Retrieved indices:", indices)
    
    summaries = []
    # Loop through retrieved article indices.
    for idx in indices[0]:
        article = data.iloc[idx]
        headline = article.get("headline", "No Headline")
        short_description = article.get("short_description", "")
        
        # Debug: print details about the retrieved article
        print(f"DEBUG: Processing article at index {idx}:")
        print(f"         Headline: {headline}")
        print(f"         Short Description: {short_description}")
        
        # Generate a summary for the article's short description.
        summary = generate_summary_local(short_description)
        summaries.append(summary)
    
    # Combine the summaries into one final summary string.
    combined_summary = " ".join(summaries)
    print("DEBUG: Combined Summary:", combined_summary)
    
    return combined_summary

if __name__ == '__main__':
    # This block is for standalone testing of the retrieval.
    # Ensure that you have loaded your data, built your index, etc.
    pass
